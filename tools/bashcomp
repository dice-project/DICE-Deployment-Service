function _get_commands ()
{
  # We packed this into function in order to avoid polluting global namespace
  # (this script is not executed, it is sourced into active shell session!).
  echo "
    authenticate
    container-info
    create delete
    deploy
    get-inputs
    list-instances
    list
    outputs
    set-inputs
    status
    teardown
    use
    wait-deploy
  "
}

function _find_command ()
{
  if [[ $COMP_CWORD -eq 1 ]]
  then
    echo "__main"
  elif [[ "${COMP_WORDS[1]}" == "--config" && $COMP_CWORD -gt 3 ]]
  then
    echo "${COMP_WORDS[3]}"
  elif [[ "${COMP_WORDS[1]}" == "--config" && $COMP_CWORD -gt 2 ]]
  then
    echo "__main-no-conf"
  elif [[ "${COMP_WORDS[1]}" == "--config" ]]
  then
    echo "--config"
  else
    echo "${COMP_WORDS[1]}"
  fi
}

function _complete_container ()
{
  local containers=$(${COMP_WORDS[0]} list 2> /dev/null | cut -d: -f1)
  COMPREPLY=( $(compgen -W "$containers" -- "${COMP_WORDS[COMP_CWORD]}") )
}

function _dice_deploy_cli ()
{
  local cur prev cmd

  COMPREPLY=()
  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD - 1]}

  cmd=$(_find_command)

  case "$cmd" in
    __main)
      COMPREPLY=($(compgen -W "$(_get_commands) --config" -- "$cur"))
      ;;
    __main-no-conf)
      COMPREPLY=($(compgen -W "$(_get_commands)" -- "$cur"))
      ;;
    --config)
      COMPREPLY=($(compgen -o plusdirs -f -- "$cur"))
      ;;

    # Next few commands have no sensible completion, so we complete nothing
    # and "force" user to press enter and get sensible help message.
    authenticate) ;;
    create) ;;
    use) ;;

    # Commands that require no inputs.
    get-inputs) ;;
    list) ;;

    # Next commands autocomplete with container uuid only (no extra parameters
    # are allowed).
    container-info) ;&
    delete) ;&
    list-instances) ;&
    outputs) ;&
    status) ;&
    teardown) ;&
    wait-deploy)
      [[ "$prev" == "$cmd" ]] && _complete_container
      ;;

    # Commands that require custom completion handling.
    deploy)
      [[ "$prev" == "$cmd" ]] && _complete_container && return 0
      [[ $COMP_CWORD -ge 3 && ${COMP_WORDS[COMP_CWORD - 2]} == "$cmd" ]] \
        && COMPREPLY=(
             $(compgen -o plusdirs -f -X '!*.@(yaml|tar.gz|tgz)' -- "$cur")
           ) \
        && return 0
      [[ $COMP_CWORD -ge 4 && ${COMP_WORDS[COMP_CWORD - 3]} == "$cmd" ]] \
        && COMPREPLY=( $(compgen -W "--register-app" -- "$cur"))
      ;;
    set-inputs)
      [[ "$prev" == "$cmd" ]] && \
        COMPREPLY=($(compgen -o plusdirs -f -- "$cur"))
      ;;
  esac
  return 0
}
complete -o filenames -F _dice_deploy_cli dice-deploy-cli
# Next line override shell's default completion
complete -o filenames -F _dice_deploy_cli ./dice-deploy-cli
